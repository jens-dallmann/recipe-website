buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.8.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
    baseName = 'jd-server'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("junit:junit")
    compile("org.springframework.boot:spring-boot-starter-actuator")
}

task "create-dirs" << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

task makeJar(dependsOn: assemble) << {
    BuildPostProcessor.postProcess(buildDir)
}

makeJar.shouldRunAfter assemble

public class BuildPostProcessor {
    public static void postProcess(File buildDir) {
        setFilePermissionsRecursive(buildDir);
    }

    private static void setFilePermissionsRecursive(File directory) {
        setReadWrite(directory)
        for(File file: directory.listFiles()) {
            if(!file.directory) {
                setReadWrite(file);
            }
            else {
                setFilePermissionsRecursive(file)
            }
        }
    }

    private static void setReadWrite(File file) {
        System.out.println("Changing permissions of "+file.absolutePath)
        file.setReadable(true,false);
        file.setWritable(true,false)
        file.setExecutable(true,false)
    }
}







